{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\SrGaba\\\\Desktop\\\\modulo05\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\SrGaba\\\\Desktop\\\\modulo05\\\\src\\\\pages\\\\Repository\\\\index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport { Container, Owner, Loading, IssueList } from './styles';\n\nclass Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref = await Promise.all([api.get(\"/repos/\".concat(repoName)), api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n      params: {\n        state: 'open',\n        per_page: 5\n      }\n    })]),\n          _ref2 = _slicedToArray(_ref, 2),\n          repository = _ref2[0],\n          issues = _ref2[1];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    const _this$state = this.state,\n          repository = _this$state.repository,\n          issues = _this$state.issues,\n          loading = _this$state.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" Carregando \");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Voltar aos reposit\\xF3rios \"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" \", repository.name, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" \", repository.description, \" \")), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", issue.user.login, \" \"), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \", issue.title, \" \"), \" \"))))));\n  }\n\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Repository;","map":{"version":3,"sources":["C:\\Users\\SrGaba\\Desktop\\modulo05\\src\\pages\\Repository\\index.js"],"names":["React","Component","Link","PropTypes","api","Container","Owner","Loading","IssueList","Repository","state","repository","issues","loading","componentDidMount","match","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","setState","data","console","log","render","owner","avatar_url","login","name","description","map","issue","String","id","user","html_url","title","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component }from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../services/api';\r\n\r\nimport { Container, Owner, Loading, IssueList } from './styles';\r\n\r\nclass Repository extends Component {\r\n    static propTypes = {\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                repository: PropTypes.string,\r\n            })\r\n        }).isRequired,\r\n    };\r\n\r\n    state = {\r\n        repository: {},\r\n        issues: [],\r\n        loading: true, \r\n    }\r\n    \r\n    async componentDidMount()\r\n    {\r\n        const { match } = this.props;\r\n\r\n        const repoName = decodeURIComponent(match.params.repository);\r\n\r\n        const [repository, issues] = await Promise.all([\r\n            api.get(`/repos/${repoName}`),\r\n            api.get(`/repos/${repoName}/issues`, {\r\n                params: {\r\n                    state: 'open',\r\n                    per_page: 5\r\n                }\r\n            })\r\n        ])\r\n\r\n        this.setState({\r\n            repository: repository.data,\r\n            issues: issues.data,\r\n            loading: false, \r\n        });\r\n\r\n        console.log(this.state);\r\n     }\r\n\r\n    render()\r\n    {\r\n        const{ repository, issues, loading} = this.state;\r\n\r\n        if(loading)\r\n        {\r\n            return <Loading> Carregando </Loading>\r\n        }\r\n\r\n        return(\r\n             <Container>\r\n                 <Owner>\r\n                    <Link to=\"/\"> Voltar aos reposit√≥rios </Link>\r\n                    <img src={repository.owner.avatar_url} alt={repository.owner.login} />\r\n                    <h1> {repository.name} </h1>\r\n                    <p> {repository.description} </p>\r\n                 </Owner>\r\n\r\n                <IssueList>\r\n                    {issues.map(issue => (\r\n                        <li key={String(issue.id)}>\r\n                            <img src={issue.user.avatar_url} alt={issue.user.login} />\r\n                            <div>\r\n                                <a href={issue.html_url}> {issue.user.login} </a>\r\n                                <strong> <p> {issue.title} </p> </strong>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </IssueList>\r\n\r\n             </Container>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Repository;\r\n\r\n"]},"metadata":{},"sourceType":"module"}